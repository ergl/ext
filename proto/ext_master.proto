syntax = "proto3";
package master;

message Address {
  string ip = 1;
  uint32 port = 2;
}

message Register {
  string replicaId = 1;
  uint32 partition = 2;
  string ip = 3;
  uint32 clientPort = 4;
  uint32 remotePort = 5;
}

message RegisterReply {
  message PartitionNodes {
    map<string, Address> nodes = 1;
  }

  map<uint32, PartitionNodes> nodes = 1;
  map<uint32, string> leaders = 2;
  map<string, uint32> latencies = 3;
  repeated string leaderChoices = 4;
}

message GetNearestReplica {
  string currentReplica = 1;
}

message GetReplicaNodes {
  string forReplica = 1;
}

message GetNodesReply {
  map<uint32, Address> nodes = 1;
}

message GetNearestReplicaReply {
  string replica = 1;
  uint32 out_latency = 2;
  uint32 in_latency = 3;
  GetNodesReply nodes = 4;
}

message Request {
  uint32 seq = 1;
  oneof payload {
    // Each server node registers on startup. Once every node has called `registerNode`,
    // the master delivers the information needed for all nodes to operate
    Register registerNode = 2;

    // Called by any node or client
    GetNearestReplica getNearestReplica = 3;

    // Called by clients, used to learn the topology of the local replica
    GetReplicaNodes getReplicaNodes = 4;
  }
}

message Response {
  uint32 seq = 1;
  oneof payload {
    RegisterReply registerReply = 2;
    GetNodesReply getReplicaNodesReply = 3;
    GetNearestReplicaReply getNearestReplicaNodesReply = 4;
  }
}
